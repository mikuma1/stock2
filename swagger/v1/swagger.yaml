openapi: 3.0.1
info:
  title: Company Management API
  version: v1
  description: |
    Company Management System API documentation

    ## 認証について
    すべてのAPIエンドポイントはJWTトークンによる認証が必要です。
    トークンは`Authorization`ヘッダーに`Bearer <token>`の形式で指定してください。

    ## エラーレスポンス
    - 401: 認証エラー
    - 403: 権限エラー
    - 404: リソースが見つからない
    - 422: バリデーションエラー

servers:
  - url: http://localhost:3000
    description: Development server

components:
  # 認証スキーマ
  securitySchemes:
    bearer_auth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWTトークンをAuthorizationヘッダーに指定してください

  # 共通パラメータ
  parameters:
    CompanyId:
      name: company_id
      in: path
      required: true
      description: 会社ID
      schema:
        type: integer
        minimum: 1

    DepartmentId:
      name: id
      in: path
      required: true
      description: 部署ID
      schema:
        type: integer
        minimum: 1

  # 共通レスポンス
  responses:
    Forbidden:
      description: 権限エラー
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            error: "権限がありません"

    NotFound:
      description: リソースが見つかりません
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            error: "リソースが見つかりません"

    UnprocessableEntity:
      description: バリデーションエラー
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            errors: ["バリデーションエラーが発生しました"]

  # スキーマ定義
  schemas:
    Department:
      type: object
      properties:
        id:
          type: integer
          description: 部署ID
        name:
          type: string
          description: 部署名
          maxLength: 50
        description:
          type: string
          description: 部署の説明
          maxLength: 500
        company_id:
          type: integer
          description: 所属会社ID
        created_at:
          type: string
          format: date-time
          description: 作成日時
        updated_at:
          type: string
          format: date-time
          description: 更新日時
      required:
        - id
        - name
        - company_id

    DepartmentInput:
      type: object
      properties:
        department:
          type: object
          properties:
            name:
              type: string
              description: 部署名
              maxLength: 50
            description:
              type: string
              description: 部署の説明
              maxLength: 500
          required:
            - name

    Error:
      type: object
      properties:
        error:
          type: string
        errors:
          type: array
          items:
            type: string

    # 会社のスキーマ
    Company:
      type: object
      properties:
        id:
          type: integer
          description: 会社ID
        company_name:
          type: string
          description: 会社名
        address:
          type: string
          description: 住所
        phone_number:
          type: string
          description: 電話番号
        subdomain:
          type: string
          description: サブドメイン
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - company_name
        - subdomain

    CompanyInput:
      type: object
      properties:
        company:
          type: object
          properties:
            company_name:
              type: string
              description: 会社名
            address:
              type: string
              description: 住所
            phone_number:
              type: string
              description: 電話番号
            subdomain:
              type: string
              description: サブドメイン
          required:
            - company_name
            - subdomain

    # ユーザーのスキーマ
    User:
      type: object
      properties:
        id:
          type: integer
          description: ユーザーID
        email:
          type: string
          format: email
          description: メールアドレス
        name:
          type: string
          description: ユーザー名
        role:
          type: string
          enum: [admin, user]
          description: ユーザー権限
        company_id:
          type: integer
          description: 所属会社ID
        department_id:
          type: integer
          description: 所属部署ID
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - email
        - role
        - company_id

    UserInput:
      type: object
      properties:
        user:
          type: object
          properties:
            email:
              type: string
              format: email
              description: メールアドレス
            password:
              type: string
              description: パスワード
            name:
              type: string
              description: ユーザー名
            role:
              type: string
              enum: [admin, user]
              description: ユーザー権限
            department_id:
              type: integer
              description: 所属部署ID
          required:
            - email
            - password
            - role

# APIパス定義
paths:
  /api/v1/companies/{company_id}/departments:
    parameters:
      - $ref: "#/components/parameters/CompanyId"

    get:
      tags:
        - Departments
      summary: 部署一覧の取得
      description: |
        指定した会社の部署一覧を取得します。
        管理者のみがアクセス可能です。
      security:
        - bearer_auth: []
      responses:
        "200":
          description: 部署一覧の取得に成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Department"
              example:
                - id: 1
                  name: "営業部"
                  description: "営業部門です"
                  company_id: 1
                  created_at: "2024-01-01T00:00:00.000Z"
                  updated_at: "2024-01-01T00:00:00.000Z"
        "403":
          $ref: "#/components/responses/Forbidden"

    post:
      tags:
        - Departments
      summary: 部署の新規作成
      description: |
        新しい部署を作成します。
        - 管理者のみが実行可能です
        - 部署名は会社内で一意である必要が��ります
        - 部署名は50文字以内です
      security:
        - bearer_auth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DepartmentInput"
            example:
              department:
                name: "新規部署"
                description: "新規部署の説明"
      responses:
        "201":
          description: 部署の作成に成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Department"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "403":
          $ref: "#/components/responses/Forbidden"

  /api/v1/companies/{company_id}/departments/{id}:
    parameters:
      - $ref: "#/components/parameters/CompanyId"
      - $ref: "#/components/parameters/DepartmentId"

    get:
      tags:
        - Departments
      summary: 部署詳細の取得
      description: 指定した部署の詳細情報を取得します
      security:
        - bearer_auth: []
      responses:
        "200":
          description: 部署詳細の取得に成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Department"
        "404":
          $ref: "#/components/responses/NotFound"

    patch:
      tags:
        - Departments
      summary: 部署情報の更新
      description: |
        部署の情報を更新します。
        - 管理者のみが実行可能です
        - 部署名は会社内で一意である必要があります
        - 部署名は50文字以内です
      security:
        - bearer_auth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DepartmentInput"
      responses:
        "200":
          description: 部署の更新に成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Department"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"

    delete:
      tags:
        - Departments
      summary: 部署の削除
      description: |
        部署を削除します。
        - 管理者のみが実行可能です
        - 所属するユーザーがいる場合は削除できません
      security:
        - bearer_auth: []
      responses:
        "204":
          description: 部署の削除に成功
        "422":
          description: 削除できない部署
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                errors: ["所属しているユーザーが存在するため削除できません"]

  # 会社関連のエンドポイント
  /api/v1/companies:
    get:
      tags:
        - Companies
      summary: 会社一覧の取得
      description: 全ての会社の一覧を取得します
      security:
        - bearer_auth: []
      responses:
        "200":
          description: 会社一覧の取得に成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Company"

    post:
      tags:
        - Companies
      summary: 会社の新規作成
      description: |
        新しい会社を作成します。
        - 管理者のみが実行可能です
        - サブドメインは一意である必要があります
      security:
        - bearer_auth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CompanyInput"
      responses:
        "201":
          description: 会社の作成に成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"

  /api/v1/companies/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: 会社ID
        schema:
          type: integer
          minimum: 1

    get:
      tags:
        - Companies
      summary: 会社詳細の取得
      security:
        - bearer_auth: []
      responses:
        "200":
          description: 会社詳細の取得に成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
        "404":
          $ref: "#/components/responses/NotFound"

    patch:
      tags:
        - Companies
      summary: 会社情報の更新
      description: |
        会社の情報を更新します。
        - 管理者のみが実行可能です
      security:
        - bearer_auth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CompanyInput"
      responses:
        "200":
          description: 会社情報の更新に成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"

  # ユーザー関連のエンドポイント
  /api/v1/companies/{company_id}/users:
    parameters:
      - $ref: "#/components/parameters/CompanyId"

    get:
      tags:
        - Users
      summary: ユーザー一覧の取得
      description: 指定した会社のユーザー一覧を取得します
      security:
        - bearer_auth: []
      responses:
        "200":
          description: ユーザー一覧の取得に成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"

    post:
      tags:
        - Users
      summary: ユーザーの新規作成
      description: |
        新しいユーザーを作成します。
        - 管理者のみが実行可能です
        - メールアドレスは一意である必要があります
        - 一般ユーザーは部署の所属が必須です
      security:
        - bearer_auth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserInput"
      responses:
        "201":
          description: ユーザーの作成に成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"

  /api/v1/companies/{company_id}/users/{id}:
    parameters:
      - $ref: "#/components/parameters/CompanyId"
      - name: id
        in: path
        required: true
        description: ユーザーID
        schema:
          type: integer
          minimum: 1

    get:
      tags:
        - Users
      summary: ユーザー詳細の取得
      security:
        - bearer_auth: []
      responses:
        "200":
          description: ユーザー詳細の取得に成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          $ref: "#/components/responses/NotFound"

    patch:
      tags:
        - Users
      summary: ユーザー情報の更新
      description: |
        ユーザーの情報を更新します。
        - 管理者のみが実行可能です
        - メールアドレスは一意である必要があります
        - 一般ユーザーは部署の所属が必須です
      security:
        - bearer_auth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserInput"
      responses:
        "200":
          description: ユーザー情報の更新に成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
