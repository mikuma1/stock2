openapi: 3.0.1
info:
  title: 企業管理API
  version: v1
  description: |
    Company Management System API documentation

    ## 認証について
    すべてのAPIエンドポイントはJWTトークンによる認証が必要です。
    トークンは`Authorization`ヘッダーに`Bearer <token>`の形式で指定してください。

    ## エラーレスポンス
    - 401: 認証エラー
    - 403: 権限エラー
    - 404: リソースが見つからない
    - 422: バリデーションエラー

servers:
  - url: http://localhost:3000
    description: Development server

tags:
  - name: Companies
    description: 企業管理API
  - name: Departments
    description: 部署管理API
  - name: Categories
    description: カテゴリ管理API
  - name: Users
    description: ユーザー管理API
  - name: Items
    description: 消耗品管理API
  - name: Stocks
    description: 在庫管理API
  - name: Orders
    description: 発注管理API

security:
  - bearer_auth: []

components:
  # 認証スキーマ
  securitySchemes:
    bearer_auth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWTトークンをAuthorizationヘッダーに指定してください

  # 共通パラメータ
  parameters:
    CompanyId:
      name: company_id
      in: path
      required: true
      description: 企業ID
      schema:
        type: integer
        minimum: 1
    ResourceId:
      name: id
      in: path
      required: true
      description: リソースID
      schema:
        type: integer
        minimum: 1
    ItemId:
      name: item_id
      in: path
      required: true
      description: 消耗品ID
      schema:
        type: integer
        minimum: 1

  # 共通レスポンス
  responses:
    Success:
      description: 操作が成功しました
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BaseResponse"
    Created:
      description: 作成に成功しました
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BaseResponse"
    NoContent:
      description: 削除に成功しました
    Error:
      description: エラーが発生しました
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    StockList:
      description: 在庫履歴一覧の取得に成功
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Stock"
    StockDetail:
      description: 在庫履歴詳細の取得に成功
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Stock"

  # 基本スキーマ
  schemas:
    BaseModel:
      type: object
      properties:
        id:
          type: integer
          description: ID
        created_at:
          type: string
          format: date-time
          description: 作成日時
        updated_at:
          type: string
          format: date-time
          description: 更新日時

    BaseResponse:
      type: object
      properties:
        status:
          type: string
        data:
          type: object

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
        errors:
          type: array
          items:
            type: string
        status:
          type: integer

    # カテゴリスキーマ
    Category:
      allOf:
        - $ref: "#/components/schemas/BaseModel"
        - type: object
          properties:
            name:
              type: string
              description: カテゴリ名
              maxLength: 50
            description:
              type: string
              description: カテゴリの説明
              maxLength: 500
            company_id:
              type: integer
              description: 所属企業ID
          required:
            - name
            - company_id

    CategoryInput:
      type: object
      properties:
        category:
          type: object
          properties:
            name:
              type: string
              description: カテゴリ名
              maxLength: 50
            description:
              type: string
              description: カテゴリの説明
              maxLength: 500
          required:
            - name

    # 消耗品スキーマ
    Item:
      allOf:
        - $ref: "#/components/schemas/BaseModel"
        - type: object
          properties:
            name:
              type: string
              description: 消耗品名
              maxLength: 100
            description:
              type: string
              description: 消耗品の説明
              maxLength: 1000
            stock_quantity:
              type: integer
              description: 現在の在庫数
              minimum: 0
            minimum_quantity:
              type: integer
              description: 最小在庫数
              minimum: 0
            unit:
              type: string
              description: 単位
              maxLength: 20
            url:
              type: string
              description: 購入URL
              format: uri
            purchase_notes:
              type: string
              description: 購入時の注意事項
              maxLength: 1000
            category_id:
              type: integer
              description: カテゴリID
            company_id:
              type: integer
              description: 所属企業ID
          required:
            - name
            - company_id
            - category_id

    ItemInput:
      type: object
      properties:
        item:
          type: object
          properties:
            name:
              type: string
              description: 消耗品名
              maxLength: 100
            description:
              type: string
              description: 消耗品の説明
              maxLength: 1000
            minimum_quantity:
              type: integer
              description: 最小在庫数
              minimum: 0
            unit:
              type: string
              description: 単位
              maxLength: 20
            url:
              type: string
              description: 購入URL
              format: uri
            purchase_notes:
              type: string
              description: 購入時の注意事項
              maxLength: 1000
            category_id:
              type: integer
              description: カテゴリID
          required:
            - name
            - category_id

    # 在庫スキーマ
    Stock:
      allOf:
        - $ref: "#/components/schemas/BaseModel"
        - type: object
          properties:
            item_id:
              type: integer
              description: 消耗品ID
            quantity:
              type: integer
              description: 数量
            operation_type:
              type: string
              enum: [addition, subtraction]
              description: 操作種別（addition:入庫、subtraction:出庫）
            notes:
              type: string
              description: 備考
              maxLength: 1000
          required:
            - item_id
            - quantity
            - operation_type

    StockInput:
      type: object
      properties:
        stock:
          type: object
          properties:
            quantity:
              type: integer
              description: 数量
              minimum: 1
            operation_type:
              type: string
              enum: [addition, subtraction]
              description: 操作種別（addition:入庫、subtraction:出庫）
            notes:
              type: string
              description: 備考
              maxLength: 1000
          required:
            - quantity
            - operation_type

    # 発注スキーマ
    Order:
      allOf:
        - $ref: "#/components/schemas/BaseModel"
        - type: object
          properties:
            item_id:
              type: integer
              description: 消耗品ID
            user_id:
              type: integer
              description: 申請者ID
            approver_id:
              type: integer
              description: 承認者ID
              nullable: true
            company_id:
              type: integer
              description: 所属企業ID
            quantity:
              type: integer
              description: 数量
              minimum: 1
            status:
              type: string
              enum: [pending, approved, rejected, ordered, received]
              description: |
                ステータス
                - pending: 申請中
                - approved: 承認済
                - rejected: 却下
                - ordered: 発注済
                - received: 受領済
            note:
              type: string
              description: 備考
              maxLength: 1000
            ordered_at:
              type: string
              format: date-time
              description: 発注日時
              nullable: true
            received_at:
              type: string
              format: date-time
              description: 受領日時
              nullable: true
            item_name:
              type: string
              description: 消耗品名
            user_name:
              type: string
              description: 申請者名
            approver_name:
              type: string
              description: 承認者名
              nullable: true
            status_text:
              type: string
              description: ステータスの日本語表示
          required:
            - item_id
            - user_id
            - company_id
            - quantity
            - status

    OrderInput:
      type: object
      properties:
        order:
          type: object
          properties:
            item_id:
              type: integer
              description: 消耗品ID
            quantity:
              type: integer
              description: 数量
              minimum: 1
            note:
              type: string
              description: 備考
              maxLength: 1000
          required:
            - item_id
            - quantity

    # 在庫関連のエラーレスポンス
    StockError:
      allOf:
        - $ref: "#/components/schemas/ErrorResponse"
        - type: object
          properties:
            details:
              type: object
              properties:
                quantity:
                  type: array
                  items:
                    type: string
                  example:
                    ["在庫数が不足しています", "1以上の数値を指定してください"]
                operation_type:
                  type: array
                  items:
                    type: string
                  example: ["入庫または出庫を指定してください"]
                stock_quantity:
                  type: array
                  items:
                    type: string
                  example: ["在庫数は0以上である必要があります"]

# APIパス定義
paths:
  /api/v1/companies/{company_id}/categories:
    parameters:
      - $ref: "#/components/parameters/CompanyId"

    get:
      tags: [Categories]
      summary: カテゴリ一覧の取得
      description: 指定した企業のカテゴリ一覧を取得します
      responses:
        "200":
          description: カテゴリ一覧の取得に成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Category"

    post:
      tags: [Categories]
      summary: カテゴリの新規作成
      description: |
        新しいカテゴリを作成します。
        - 管理者のみが実行可能です
        - カテゴリ名は企業内で一意である必要があります
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CategoryInput"
      responses:
        "201":
          $ref: "#/components/responses/Created"
        "422":
          $ref: "#/components/responses/Error"

  /api/v1/companies/{company_id}/categories/{id}:
    parameters:
      - $ref: "#/components/parameters/CompanyId"
      - $ref: "#/components/parameters/ResourceId"

    get:
      tags: [Categories]
      summary: カテゴリ詳細の取得
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "404":
          $ref: "#/components/responses/Error"

    patch:
      tags: [Categories]
      summary: カテゴリ情報の更新
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CategoryInput"
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "422":
          $ref: "#/components/responses/Error"

    delete:
      tags: [Categories]
      summary: カテゴリの削除
      responses:
        "204":
          $ref: "#/components/responses/NoContent"
        "422":
          $ref: "#/components/responses/Error"

  /api/v1/companies/{company_id}/items:
    parameters:
      - $ref: "#/components/parameters/CompanyId"

    get:
      tags: [Items]
      summary: 消耗品一覧の取得
      description: 指定した企業の消耗品一覧を取得します
      parameters:
        - name: category_id
          in: query
          description: カテゴリIDでフィルタリング
          schema:
            type: integer
        - name: low_stock
          in: query
          description: 在庫が最小数量以下の商品のみ取得
          schema:
            type: boolean
      responses:
        "200":
          description: 消耗品一覧の取得に成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Item"

    post:
      tags: [Items]
      summary: 消耗品の新規作成
      description: |
        新しい消耗品を作成します。
        - 管理者のみが実行可能です
        - 消耗品名は企業内で一意である必要があります
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ItemInput"
      responses:
        "201":
          $ref: "#/components/responses/Created"
        "422":
          $ref: "#/components/responses/Error"

  /api/v1/companies/{company_id}/items/{id}:
    parameters:
      - $ref: "#/components/parameters/CompanyId"
      - $ref: "#/components/parameters/ResourceId"

    get:
      tags: [Items]
      summary: 消耗品詳細の取得
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "404":
          $ref: "#/components/responses/Error"

    patch:
      tags: [Items]
      summary: 消耗品情報の更新
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ItemInput"
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "422":
          $ref: "#/components/responses/Error"

    delete:
      tags: [Items]
      summary: 消耗品の削除
      responses:
        "204":
          $ref: "#/components/responses/NoContent"
        "422":
          $ref: "#/components/responses/Error"

  /api/v1/items/{item_id}/stocks:
    parameters:
      - $ref: "#/components/parameters/ItemId"

    get:
      tags: [Stocks]
      summary: 在庫履歴一覧の取得
      description: |
        指定した消耗品の在庫履歴一覧を取得します
        - 在庫の増減履歴を時系列で表示
        - 最新の操作が先頭に表示されます
      responses:
        "200":
          $ref: "#/components/responses/StockList"
        "401":
          $ref: "#/components/responses/Error"
        "404":
          $ref: "#/components/responses/Error"

    post:
      tags: [Stocks]
      summary: 在庫操作の記録
      description: |
        在庫の入出庫を記録します。
        - 管理者のみが実行可能です
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StockInput"
      responses:
        "201":
          $ref: "#/components/responses/Created"
        "401":
          $ref: "#/components/responses/Error"
        "403":
          $ref: "#/components/responses/Error"
        "422":
          $ref: "#/components/responses/Error"

  /api/v1/items/{item_id}/stocks/{id}:
    parameters:
      - $ref: "#/components/parameters/ItemId"
      - $ref: "#/components/parameters/ResourceId"

    get:
      tags: [Stocks]
      summary: 在庫履歴詳細の取得
      description: 指定した在庫履歴の詳細を取得します
      responses:
        "200":
          $ref: "#/components/responses/StockDetail"
        "401":
          $ref: "#/components/responses/Error"
        "404":
          $ref: "#/components/responses/Error"

  /api/v1/orders:
    get:
      tags: [Orders]
      summary: 発注一覧の取得
      description: 所属企業の発注一覧を取得します
      responses:
        "200":
          description: 発注一覧の取得に成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Order"
        "401":
          $ref: "#/components/responses/Error"

    post:
      tags: [Orders]
      summary: 発注の新規作成
      description: 新しい発注を作成します
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderInput"
      responses:
        "201":
          $ref: "#/components/responses/Created"
        "422":
          $ref: "#/components/responses/Error"

  /api/v1/orders/{id}:
    parameters:
      - $ref: "#/components/parameters/ResourceId"

    get:
      tags: [Orders]
      summary: 発注詳細の取得
      responses:
        "200":
          description: 発注詳細の取得に成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        "404":
          $ref: "#/components/responses/Error"

    patch:
      tags: [Orders]
      summary: 発注情報の更新
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderInput"
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "422":
          $ref: "#/components/responses/Error"

  /api/v1/orders/{id}/approve:
    parameters:
      - $ref: "#/components/parameters/ResourceId"

    patch:
      tags: [Orders]
      summary: 発注の承認
      description: |
        発注を承認します
        - 管理者のみが実行可能です
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "403":
          $ref: "#/components/responses/Error"
        "422":
          $ref: "#/components/responses/Error"

  /api/v1/orders/{id}/reject:
    parameters:
      - $ref: "#/components/parameters/ResourceId"

    patch:
      tags: [Orders]
      summary: 発注の却下
      description: |
        発注を却下します
        - 管理者のみが実行可能です
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "403":
          $ref: "#/components/responses/Error"
        "422":
          $ref: "#/components/responses/Error"

  /api/v1/orders/{id}/order:
    parameters:
      - $ref: "#/components/parameters/ResourceId"

    patch:
      tags: [Orders]
      summary: 発注処理の実行
      description: |
        承認済みの発注を発注済みにします
        - 管理者のみが実行可能です
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "403":
          $ref: "#/components/responses/Error"
        "422":
          $ref: "#/components/responses/Error"

  /api/v1/orders/{id}/receive:
    parameters:
      - $ref: "#/components/parameters/ResourceId"

    patch:
      tags: [Orders]
      summary: 発注品の受領
      description: |
        発注済みの商品を受領済みにします
        - 管理者のみが実行可能です
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "403":
          $ref: "#/components/responses/Error"
        "422":
          $ref: "#/components/responses/Error"

  /api/v1/companies/{company_id}/items/{id}/update_stock:
    parameters:
      - $ref: "#/components/parameters/CompanyId"
      - $ref: "#/components/parameters/ResourceId"

    patch:
      tags: [Items]
      summary: 在庫数の更新
      description: |
        消耗品の在庫数を更新します
        - 在庫の増減操作を記録します
        - 在庫履歴も同時に作成されます
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                stock:
                  type: object
                  properties:
                    quantity:
                      type: integer
                      description: 数量
                    operation_type:
                      type: string
                      enum: [addition, subtraction]
                      description: 操作種別（addition:入庫、subtraction:出庫）
                  required:
                    - quantity
                    - operation_type
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: 権限エラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: リソースが見つかりません
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "422":
          description: |
            バリデーションエラー
            - 数量が不正（負数、ゼロ）
            - 在庫数が不足（出庫時）
            - 操作種別が不正
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StockError"
